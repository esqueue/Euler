#a**2 - 4*b < 0 so that it is not factorisable, so a**2 < 4*b, so b > 0
#When n=0, equation reduces to b. So b must be a prime number.
#When n=1, equation reduces to a+b+1. So a+b must be even. Since b is prime, a must be odd (except when b=2, which is trivial).

def primeSieve(n):
    allnum, sieve = [True]*n, [2]
    
    for i in range (3, int(n**0.5 + 1), 2):
        if allnum[i] != 0:
            for j in range (i**2, n, i):
                allnum[j] = 0

    for i in range (3, n, 2):
        if allnum[i] != 0:
            sieve.append(i)

    return sieve


def isPrime(n):
    if n < 2:
        return False
    elif n != 2 and n % 2 == 0:
        return False
    else:
        return all(n % i for i in range(3, int(n**0.5)+1, 2))


def func(a, b, n):
    return (n**2 + a*n + b)


A = list(range(-999, 1000, 2))
B = primeSieve(1000)

longest_n=39
ab_product=41
long_a, long_b = 1, 41

for b in B:
    for a in A:
        n=0
        while isPrime(func(a, b, n)):
            n+=1
        
        if n>longest_n:
            longest_n=n-1
            long_a, long_b, = a, b
            ab_product=a*b

print (ab_product)
